<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>奇怪的问题记录</title>
      <link href="/2018/06/08/%E5%A5%87%E6%80%AA%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/06/08/%E5%A5%87%E6%80%AA%E7%9A%84%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>一些在工作中遇到的奇怪问题的记录，方便回忆查找<br><a id="more"></a></p><h3 id="Mac-OS-X-下目录名大小写不敏感问题"><a href="#Mac-OS-X-下目录名大小写不敏感问题" class="headerlink" title="Mac OS X 下目录名大小写不敏感问题"></a>Mac OS X 下目录名大小写不敏感问题</h3><p>在Terminal里，<code>cd</code> 命令可以进入一个忽略大小写的目录，比如我有一个目录，<code>~/Go</code>,我可以<code>cd ~/Go</code>,也可以<code>cd ~/go</code>，实际上这两个命令进入的是同一个目录。进而发现Mac默认文件和目录是不区分大小写的（这个有点反*inux），但是多数程序是关系区分大小写的。所以就出现问题了。</p><p>在一个Nsq的项目里使用的vendor作依赖管理，用dep也已经下载好了，但是test通不过，build也不行，说找不到package，而且从错误信息上看，只搜索了GOPATH和GOROOT，检查vendor目录，依赖包都在，怎么也找不到原因，最后猜测可能和目录大小写有关，因为之前是<code>cd go</code>而目录名是Go，这次<code>cd Go</code>然后逐层进入，再次test，果然好了</p><blockquote><p>总结：OS X 默认不区分大小写，在Terminal使用的时候要注意目录名称，或者统一使用小写避免问题，另外可以新建一个大小写敏感的分区</p></blockquote><p><a href="http://blog.bihe0832.com/mac-disk-utility.html" target="_blank" rel="noopener">OS X 中设置大小写敏感的分区并切换</a></p>]]></content>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mac下使用dokcer搭建开发环境记录</title>
      <link href="/2018/06/01/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8dokcer%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95/"/>
      <url>/2018/06/01/Mac%E4%B8%8B%E4%BD%BF%E7%94%A8dokcer%E6%90%AD%E5%BB%BA%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E8%AE%B0%E5%BD%95/</url>
      <content type="html"><![CDATA[<pre><code>搭建环境中一些知识点的记录，帮助自己回忆一些遇到的问题</code></pre><a id="more"></a><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>工作内容包含多个项目，对应语言为php，不同项目独立维护，通过不同的域名接入，系统之间通过http交换信息。目标是实现一个一键式脚本，搭建一个开发环境可以同时支持多个项目运行，其实就是Nginx+php-fpm的docker+git checkout代码，然后<code>docker-compose</code>一起管理。<br>有两个注意点</p><ul><li>多个项目同时存在，需要通过域名区分每个项目的入口地址</li><li>多个项目在不同的git项目上，最好能一次性准备好</li></ul><h3 id="阿里云的docker源"><a href="#阿里云的docker源" class="headerlink" title="阿里云的docker源"></a>阿里云的docker源</h3><p>为了解决docker pull 的问题优先使用的是<a href="https://dev.aliyun.com/search.html" target="_blank" rel="noopener">阿里云</a>的仓库，在上面找的nginx和php-fpm，需要注意的是上面的发布的image不一定都是好用的，pull之后检查一下是否符合需求。</p><h3 id="build自己的image"><a href="#build自己的image" class="headerlink" title="build自己的image"></a>build自己的image</h3><p>制作这个一键式脚本最花费时间的地方是，想要重新build一个image，默认包含nginx的配置。不同域名对应不同的项目，一个docker通过nginx配置同时支持多个项目。当然配置域名后要在本地修改hosts文件才能正常访问。制作image就需要写一个Dockerfile，目的就是copy一些<code>nginx_xxx.conf</code>的配置文件进去，其他的信息不用修改。在这里学到了两个知识点：</p><ul><li>使用<code>doker inspect [image_id]</code>可以查看某个镜像的当前设置，包含<code>CMD</code> <code>Volumes</code> <code>EXPOSE</code>等，如下图</li><li>在基于原来的image制作新的时，只需要设置需要修改的部分即可，不需要每个Dokcerfile都填写完全的信息，比如我这个需求就是添加一些配置文件，那么Dockerfile就可以只有<code>FROM</code>和<code>COPY</code></li></ul><p><img src="/img/docker-inspect.png" alt=""></p><h3 id="docker-compose关联多个docker"><a href="#docker-compose关联多个docker" class="headerlink" title="docker-compose关联多个docker"></a>docker-compose关联多个docker</h3><p>制作工程中还有一个点学习到的就是docker-compose.yml中可以通过links方便的的吧两个docker连通，这个词可能不准确，我的理解是可能互相认识，可以通过名字访问到对方</p><h3 id="mysql密码问题"><a href="#mysql密码问题" class="headerlink" title="mysql密码问题"></a>mysql密码问题</h3><p>运行mysql的docker时，需要指定一个重要的环境变量<code>MYSQL_ROOT_PASSWORD</code>，最好加上<code>MYSQL_ROOT_HOST=%</code>，但是好多地方都没有说明挂载data的问题，自己就遇到了设置了<code>MYSQL_ROOT_PASSWORD</code>但是连接失败的问题，原因就在挂载<code>/var/lib/msyql</code>这个目录的时候里面有上次运行的文件，导致没能将新的密码设置进去。简单的方法就是第一次启动前确认挂载的目录是空的，保证这次启动时完全初始化的。</p><h3 id="sudo-和重定向问题"><a href="#sudo-和重定向问题" class="headerlink" title="sudo 和重定向问题"></a>sudo 和重定向问题</h3><p>在制作一键式脚本时，因为要更新hosts文件，需要执行类似<br><code>sudo echo &quot;$hosts_conf&quot; &gt;&gt;/etc/hosts</code><br>一直提示<code>Permission denied</code>，感觉sudo没起作用，实际上是sudo只授权给了<code>echo</code>而重定向<code>&gt;&gt;</code>也需要sudo权限，搜索结果y<br><code>sudo sh -c &quot;echo \&quot;$host_config\&quot; &gt;&gt; /etc/hostscd &quot;</code><br>感觉上有点像eval的样子，将所有动作都包含在一起了</p><h3 id="sed替换路径问题"><a href="#sed替换路径问题" class="headerlink" title="sed替换路径问题"></a>sed替换路径问题</h3><p>sed替换字符串中的某些特定字符很简单</p><p><code>sed &quot;s/abc/ABC/g&quot; filename.txt</code> </p><p>使用变量的话</p><p><code>sed &quot;s/$src/$dst/g&quot; filename.txt</code></p><p>但是如果变量中带有<code>/</code>就又问题，一个方法是保证变量内的<code>/</code>被替换为<code>\/</code>转义后在传进来，不过还有一个更好的办法</p><p><code>sed &quot;s#$src#$dst#g&quot;</code></p><p>这样<code>/</code>就不需要转义了</p><h3 id="host问题"><a href="#host问题" class="headerlink" title="host问题"></a>host问题</h3><p>由于多个php项目都在同一个挂载目录，同时不同项目使用了不同的域名，且不同项目见接口调用使用了域名进行访问。一开始只有本机配置了hosts文件，保证本地访问时可以通过127.0.0.1 访问正常，但是遇到项目间接口调用的时候出现了Connection Refuse。原因是php-fpm docker内查找域名的时候没有找到，所以通过本机得到了域名指向的是127.0.0.1，于是访问本地，然后出错了，因为对于本机来说127.0.0.1已经和docker做了端口映射，但是php-fpm内部访问的自己内部的端口，需要让php-fpm访问nginx的端口就对了。最近解决方法是给每个容器指定ip，且给php-fpm增加host配置</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">      finance-network:</span></span><br><span class="line"><span class="attr">        ipv4_address:</span> <span class="number">172.28</span><span class="number">.0</span><span class="number">.10</span></span><br><span class="line"><span class="attr">   extra_hosts:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"dev.xxx.xxx.com:172.28.0.11"</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line"><span class="attr">  finance-network:</span></span><br><span class="line"><span class="attr">    driver:</span> <span class="string">bridge</span></span><br><span class="line"><span class="attr">    ipam:</span></span><br><span class="line"><span class="attr">      driver:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">      config:</span></span><br><span class="line"><span class="attr">        - subnet:</span> <span class="number">172.28</span><span class="number">.0</span><span class="number">.0</span><span class="string">/24</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> 记录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>笔记博客开坑</title>
      <link href="/2018/05/30/%E7%AC%94%E8%AE%B0%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%9D%91/"/>
      <url>/2018/05/30/%E7%AC%94%E8%AE%B0%E5%8D%9A%E5%AE%A2%E5%BC%80%E5%9D%91/</url>
      <content type="html"><![CDATA[<p>列举一下接下来要开坑的分类<br><a id="more"></a></p><h2 id="开坑分类"><a href="#开坑分类" class="headerlink" title="开坑分类"></a>开坑分类</h2><ul><li>日常吐槽</li><li>经验总结</li><li>算法学习</li><li>go 源码和源码包学习</li><li>开源项目和源码学习</li><li>自己的项目</li></ul>]]></content>
      
      
        <tags>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
